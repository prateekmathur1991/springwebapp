<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Configure a basic web security service -->
    <http realm="Protected API"
          use-expressions="true"
          create-session="stateless"
          authentication-manager-ref="authenticationManager">
        
        <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/rest/**" access="isFullyAuthenticated()" />
        <logout logout-success-url="/" logout-url="/logout" invalidate-session="true" delete-cookies="JSESSIONID" />

        <custom-filter ref="tokenAuthenticationFilter" position="FORM_LOGIN_FILTER" />
    </http>

    <!-- Enable Method level security using annotations -->
    <global-method-security secured-annotations="enabled" pre-post-annotations="enabled" />

    <!-- Declare a BCrypt password encoder -->
    <b:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!-- Provide a custom UserDetailsService implementation -->
    <authentication-manager id="authenticationManager">
        <authentication-provider user-service-ref="adminDetailsService">
            <password-encoder ref="bcryptPasswordEncoder" />
        </authentication-provider>
    </authentication-manager>

</b:beans>

